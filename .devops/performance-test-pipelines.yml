# azure-pipelines.yml
trigger: none

parameters:
  - name: "ENVIRONMENT"
    displayName: "Environment"
    type: string
    values:
      - "dev"
      - "uat"
    default: "uat"
  - name: "NUMBER_OF_EVENTS"
    displayName: "Number of events"
    type: number
    default: 50
  - name: "TIMEOUT"
    displayName: "Timeout in seconds"
    type: number
    default: 10
variables:
  ${{ if eq(parameters['ENVIRONMENT'], 'dev') }}:
    poolImage: "pagopa-dev-loadtest-linux"
    PG_GPD_PASSWORD: "$(DEV_PG_GPD_PASSWORD)"
    PG_GPD_USERNAME: "$(DEV_PG_GPD_USERNAME)"
    INGESTION_EVENTHUB_CONN_STRING: "${DEV_INGESTION_EVENTHUB_CONN_STRING}"
  ${{ if eq(parameters['ENVIRONMENT'], 'uat') }}:
    poolImage: "pagopa-uat-loadtest-linux"
    PG_GPD_PASSWORD: "$(UAT_PG_GPD_PASSWORD)"
    PG_GPD_USERNAME: "$(UAT_PG_GPD_USERNAME)"
    INGESTION_EVENTHUB_CONN_STRING: "${UAT_INGESTION_EVENTHUB_CONN_STRING}"

pool:
  name: $(poolImage)

steps:
  - script: |
      cd ./test-utils
      chmod +x ./run_compose.sh
      ./run_compose.sh "${INGESTION_EVENTHUB_CONN_STRING}" "gpd-ingestion.apd.payment_position,cdc-raw-auto.apd.payment_position"
    displayName: Run Redis and javascript consumer
    env:
      INGESTION_EVENTHUB_CONN_STRING: ${{ variables.INGESTION_EVENTHUB_CONN_STRING }}
    
  - script: |
      cd ./performance-test/src
      docker build -f ./load/DockerfileLoad -t exec-node-load .
      docker run --rm --name loadEventsGpdIngestion --network test-utils_test-network \
      -e ENV=${ENV} \
      -e PG_GPD_USERNAME=${PG_GPD_USERNAME} \
      -e PG_GPD_PASSWORD=${PG_GPD_PASSWORD} \
      -e NUMBER_OF_EVENTS=${NUMBER_OF_EVENTS} \
      exec-node-load
    displayName: Run insert events on postgres
    env:
      ENV: ${{ parameters.ENVIRONMENT }}
      PG_GPD_USERNAME: ${{ variables.PG_GPD_USERNAME }}
      PG_GPD_PASSWORD: ${{ variables.PG_GPD_PASSWORD }}
      NUMBER_OF_EVENTS: ${{ parameters.NUMBER_OF_EVENTS }}

  - script: |
      timeout ${TIMEOUT}s
    displayName: Wait for timeout
    env:
      TIMEOUT: ${{ parameters.TIMEOUT }}

  - script: |
      cd ./performance-test/src
      docker build -f ./review/DockerfileReview -t exec-node-review .
      docker run --rm --name reviewEventsGpdIngestion --network test-utils_test-network \
      exec-node-review       
    displayName:  Run GPD Ingestion Timestamp Review

  - script: |
      docker rm -f $(docker ps -aq)
    displayName:  Remove docker containers