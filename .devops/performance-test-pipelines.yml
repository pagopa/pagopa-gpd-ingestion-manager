# azure-pipelines.yml
trigger: none

parameters:
  - name: "ENVIRONMENT"
    displayName: "Environment"
    type: string
    values:
      - "dev"
      - "uat"
    default: "uat"
  - name: "NUMBER_OF_EVENTS"
    displayName: "Number of events"
    type: number
    default: 50
  - name: "TIMEOUT"
    displayName: "Timeout in seconds"
    type: number
    default: 10
variables:
  ${{ if eq(parameters['ENVIRONMENT'], 'dev') }}:
    poolImage: "pagopa-dev-loadtest-linux"
    PG_GPD_PASSWORD: "$(DEV_PG_GPD_PASSWORD)"
    INGESTION_EVENTHUB_CONN_STRING: "${DEV_INGESTION_EVENTHUB_CONN_STRING}"
  ${{ if eq(parameters['ENVIRONMENT'], 'uat') }}:
    poolImage: "pagopa-uat-loadtest-linux"
    PG_GPD_PASSWORD: "$(UAT_PG_GPD_PASSWORD)"
    INGESTION_EVENTHUB_CONN_STRING: "${UAT_INGESTION_EVENTHUB_CONN_STRING}"


pool:
  name: $(poolImage)

steps:
  - script: |
      cd ./test-utils
      chmod +x ./run_compose.sh
      ./run_compose.sh "${{ variables.INGESTION_EVENTHUB_CONN_STRING }}" "gpd-ingestion.apd.payment_position,cdc-raw-auto.apd.payment_position"
    displayName: Run GPD Ingestion Timestamp Review
    env:
      INGESTION_EVENTHUB_CONN_STRING: ${{ variables.INGESTION_EVENTHUB_CONN_STRING }}

  - script: |
      cd ./performance-test/src
      npm install
      docker build -f ./DockerfileLoad -t exec-node .
      docker run --rm --name loadPostgres \
      -e PG_GPD_PASSWORD=${PG_GPD_PASSWORD} \
      -e NUMBER_OF_EVENTS=${NUMBER_OF_EVENTS} \
      exec-node
    displayName: Run insert events on postgres
    env:
      PG_GPD_PASSWORD: ${{ variables.PG_GPD_PASSWORD }}
      NUMBER_OF_EVENTS: ${{ variables.NUMBER_OF_EVENTS }}

  - script: |
      timeout ${TIMEOUT}s
    displayName: Wait for timeout
    env:
      TIMEOUT: ${{ variables.TIMEOUT }}

  - script: |
      cd ./performance-test/src
      npm install
      docker build -f ./DockerfileReview -t exec-node .
      docker run --rm --name ingestionReview \
      exec-node
    displayName: Run timestamp review
