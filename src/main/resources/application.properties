# Info
info.application.artifactId=@project.artifactId@
info.application.name=@project.name@
info.application.version=@project.version@
info.application.description=@project.description@
info.properties.environment=${ENV:azure}
# Actuator
management.endpoints.web.exposure.include=health,info
management.endpoints.jmx.exposure.include=health,info
management.info.env.enabled=true
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true
# Openapi
springdoc.writer-with-order-by-keys=true
springdoc.writer-with-default-pretty-printer=true
# Server
server.servlet.context-path=/
server.port=8080
server.shutdown=GRACEFUL
# Logging
logging.level.root=${DEFAULT_LOGGING_LEVEL:INFO}
logging.level.it.gov.pagopa=${APP_LOGGING_LEVEL:INFO}
# CORS configuration
cors.configuration=${CORS_CONFIGURATION:{"origins": ["*"], "methods": ["*"]}}
# Jackson serialization
spring.jackson.default-property-inclusion=NON_NULL
spring.jackson.serialization.write-dates-as-timestamps=true
spring.jackson.serialization.fail-on-empty-beans=false
spring.jackson.deserialization.fail-on-unknown-properties=false
# EH Kafka Configuration
spring.cloud.function.definition=ingestPaymentPosition;ingestPaymentOption;ingestTransfer
## Kafka Payment Positions
spring.cloud.stream.bindings.ingestPaymentPosition-in-0.destination=${KAFKA_PAYMENT_POSITION_RAW_TOPIC:cdc-raw-auto.apd.payment_position}
spring.cloud.stream.bindings.ingestPaymentPosition-in-0.group=${EVENTHUB_COMPLETE_GROUP_ID:}
spring.cloud.stream.bindings.ingestPaymentPosition-in-0.content-type=${KAFKA_CONTENT_TYPE:application/json}
spring.cloud.stream.bindings.ingestPaymentPosition-in-0.binder=payment-position-consumer
spring.cloud.stream.bindings.ingestPaymentPosition-in-0.consumer.batch-mode=true
spring.cloud.stream.binders.payment-position-consumer.type=kafka
spring.cloud.stream.binders.payment-position-consumer.environment.spring.cloud.stream.kafka.binder.brokers=${KAFKA_BROKER}
spring.cloud.stream.binders.payment-position-consumer.environment.spring.cloud.stream.kafka.binder.configuration.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="$ConnectionString" password="${PAYMENT_POSITION_INPUT_EVENTHUB_CONN_STRING}";
spring.cloud.stream.binders.payment-position-consumer.environment.spring.cloud.stream.kafka.binder.configuration.key.serializer=org.apache.kafka.common.serialization.StringSerializer
spring.cloud.stream.bindings.ingestPaymentPosition-out-0.destination=${KAFKA_PAYMENT_POSITION_INGESTED_TOPIC:gpd-ingestion.apd.payment_position}
spring.cloud.stream.bindings.ingestPaymentPosition-out-0.content-type=${KAFKA_CONTENT_TYPE:application/json}
spring.cloud.stream.bindings.ingestPaymentPosition-out-0.binder=payment-position-producer
spring.cloud.stream.binders.payment-position-producer.type=kafka
spring.cloud.stream.binders.payment-position-producer.environment.spring.cloud.stream.kafka.binder.brokers=${KAFKA_BROKER}
spring.cloud.stream.binders.payment-position-producer.environment.spring.cloud.stream.kafka.binder.configuration.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="$ConnectionString" password="${PAYMENT_POSITION_OUTPUT_EVENTHUB_CONN_STRING}";
spring.cloud.stream.binders.payment-position-producer.environment.spring.cloud.stream.kafka.binder.configuration.key.serializer=org.apache.kafka.common.serialization.StringSerializer
## Kafka Payment Options
spring.cloud.stream.bindings.ingestPaymentOption-in-0.destination=${KAFKA_PAYMENT_OPTION_RAW_TOPIC:cdc-raw-auto.apd.payment_option}
spring.cloud.stream.bindings.ingestPaymentOption-in-0.group=${EVENTHUB_COMPLETE_GROUP_ID:}
spring.cloud.stream.bindings.ingestPaymentOption-in-0.content-type=${KAFKA_CONTENT_TYPE:application/json}
spring.cloud.stream.bindings.ingestPaymentOption-in-0.binder=payment-option-consumer
spring.cloud.stream.bindings.ingestPaymentOption-in-0.consumer.batch-mode=true
spring.cloud.stream.binders.payment-option-consumer.type=kafka
spring.cloud.stream.binders.payment-option-consumer.environment.spring.cloud.stream.kafka.binder.brokers=${KAFKA_BROKER}
spring.cloud.stream.binders.payment-option-consumer.environment.spring.cloud.stream.kafka.binder.configuration.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="$ConnectionString" password="${PAYMENT_OPTION_INPUT_EVENTHUB_CONN_STRING}";
spring.cloud.stream.binders.payment-option-consumer.environment.spring.cloud.stream.kafka.binder.configuration.key.serializer=org.apache.kafka.common.serialization.StringSerializer
spring.cloud.stream.bindings.ingestPaymentOption-out-0.destination=${KAFKA_PAYMENT_OPTION_INGESTED_TOPIC:gpd-ingestion.apd.payment_option}
spring.cloud.stream.bindings.ingestPaymentOption-out-0.content-type=${KAFKA_CONTENT_TYPE:application/json}
spring.cloud.stream.bindings.ingestPaymentOption-out-0.binder=payment-option-producer
spring.cloud.stream.binders.payment-option-producer.type=kafka
spring.cloud.stream.binders.payment-option-producer.environment.spring.cloud.stream.kafka.binder.brokers=${KAFKA_BROKER}
spring.cloud.stream.binders.payment-option-producer.environment.spring.cloud.stream.kafka.binder.configuration.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="$ConnectionString" password="${PAYMENT_OPTION_OUTPUT_EVENTHUB_CONN_STRING}";
spring.cloud.stream.binders.payment-option-producer.environment.spring.cloud.stream.kafka.binder.configuration.key.serializer=org.apache.kafka.common.serialization.StringSerializer
## Kafka Transfer
spring.cloud.stream.bindings.ingestTransfer-in-0.destination=${KAFKA_TRANSFER_RAW_TOPIC:cdc-raw-auto.apd.transfer}
spring.cloud.stream.bindings.ingestTransfer-in-0.group=${EVENTHUB_COMPLETE_GROUP_ID:}
spring.cloud.stream.bindings.ingestTransfer-in-0.content-type=${KAFKA_CONTENT_TYPE:application/json}
spring.cloud.stream.bindings.ingestTransfer-in-0.binder=transfer-consumer
spring.cloud.stream.bindings.ingestTransfer-in-0.consumer.batch-mode=true
spring.cloud.stream.binders.transfer-consumer.type=kafka
spring.cloud.stream.binders.transfer-consumer.environment.spring.cloud.stream.kafka.binder.brokers=${KAFKA_BROKER}
spring.cloud.stream.binders.transfer-consumer.environment.spring.cloud.stream.kafka.binder.configuration.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="$ConnectionString" password="${TRANSFER_INPUT_EVENTHUB_CONN_STRING}";
spring.cloud.stream.binders.transfer-consumer.environment.spring.cloud.stream.kafka.binder.configuration.key.serializer=org.apache.kafka.common.serialization.StringSerializer
spring.cloud.stream.bindings.ingestTransfer-out-0.destination=${KAFKA_TRANSFER_INGESTED_TOPIC:gpd-ingestion.apd.transfer}
spring.cloud.stream.bindings.ingestTransfer-out-0.content-type=${KAFKA_CONTENT_TYPE:application/json}
spring.cloud.stream.bindings.ingestTransfer-out-0.binder=transfer-producer
spring.cloud.stream.binders.transfer-producer.type=kafka
spring.cloud.stream.binders.transfer-producer.environment.spring.cloud.stream.kafka.binder.brokers=${KAFKA_BROKER}
spring.cloud.stream.binders.transfer-producer.environment.spring.cloud.stream.kafka.binder.configuration.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="$ConnectionString" password="${TRANSFER_OUTPUT_EVENTHUB_CONN_STRING}";
spring.cloud.stream.binders.transfer-producer.environment.spring.cloud.stream.kafka.binder.configuration.key.serializer=org.apache.kafka.common.serialization.StringSerializer
## Kafka misc
spring.cloud.stream.kafka.binder.auto-create-topics=false
spring.cloud.stream.kafka.binder.configuration.heartbeat.interval.ms=${KAFKA_CONFIG_HEARTBEAT_INTERVAL_MS:3000}
spring.cloud.stream.kafka.binder.configuration.session.timeout.ms=${KAFKA_CONFIG_SESSION_TIMEOUT_MS:60000}
spring.cloud.stream.kafka.binder.configuration.request.timeout.ms=${KAFKA_CONFIG_REQUEST_TIMEOUT_MS:60000}
spring.cloud.stream.kafka.binder.configuration.sasl.mechanism=${KAFKA_CONFIG_SASL_MECHANISM:PLAIN}
spring.cloud.stream.kafka.binder.configuration.security.protocol=${KAFKA_CONFIG_SECURITY_PROTOCOL:SASL_SSL}
spring.cloud.stream.kafka.binder.configuration.connections.max.idle.ms=${KAFKA_CONFIG_CONNECTION_MAX_IDLE_TIME:180000}
spring.cloud.stream.kafka.binder.configuration.metadata.max.idle.ms=${KAFKA_CONFIG_METADATA_MAX_IDLE_MS:180000}
spring.cloud.stream.kafka.binder.configuration.metadata.max.age.ms=${KAFKA_CONFIG_METADATA_MAX_AGE_INTERVAL:179000}
spring.cloud.stream.kafka.binder.configuration.max.request.size=${KAFKA_CONFIG_METADATA_MAX_REQUEST_SIZE:1000000}
spring.cloud.stream.kafka.bindings.ingestPaymentPosition-in-0.consumer.ackMode=RECORD
spring.cloud.stream.kafka.bindings.ingestPaymentOption-in-0.consumer.ackMode=RECORD
spring.cloud.stream.kafka.bindings.ingestTransfer-in-0.consumer.ackMode=RECORD