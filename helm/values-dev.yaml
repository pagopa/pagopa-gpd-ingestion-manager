microservice-chart:
  namespace: "gps"
  nameOverride: ""
  fullnameOverride: "pagopa-gpd-ingestion-manager"
  image:
    repository: ghcr.io/pagopa/pagopa-gpd-ingestion-manager
    tag: "0.5.0"
    pullPolicy: Always
  livenessProbe:
    handlerType: httpGet
    httpGet:
      path: /actuator/health/liveness
      port: 8080
    initialDelaySeconds: 90
    failureThreshold: 6
    periodSeconds: 10
  readinessProbe:
    handlerType: httpGet
    httpGet:
      path: /actuator/health/readiness
      port: 8080
    initialDelaySeconds: 90
    failureThreshold: 6
    periodSeconds: 10
  deployment:
    create: true
  serviceMonitor:
    create: true
    endpoints:
      - interval: 10s #jmx-exporter
        targetPort: 12345
        path: /metrics
  ports:
    - 8080
    - 12345 #jmx-exporter
  service:
    create: true
    type: ClusterIP
    ports:
      - 8080
      - 12345 #jmx-exporter
  ingress:
    create: true
    host: "weudev.gps.internal.dev.platform.pagopa.it"
    path: /pagopa-gpd-ingestion-manager/(.*)
    servicePort: 8080
  serviceAccount:
    name: "gps-workload-identity"
  azure:
    workloadIdentityClientId: <workload-identity-client-id-set-automatically-by-gha>
  podAnnotations: {}
  podSecurityContext:
    seccompProfile:
      type: RuntimeDefault
  securityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: false
    capabilities:
      drop:
        - all
  resources:
    requests:
      memory: "512Mi"
      cpu: "0.25"
    limits:
      memory: "768Mi"
      cpu: "0.50"
  autoscaling:
    enable: true
    minReplica: 1
    maxReplica: 1
    pollingInterval: 10 # seconds
    cooldownPeriod: 50 # seconds
    triggers:
      - type: cpu
        metadata:
          # Required
          type: Utilization # Allowed types are 'Utilization' or 'AverageValue'
          value: "80"
  envConfig:
    WEBSITE_SITE_NAME: "pagopagpdingestionmanager" # required to show cloud role name in application insights
    FUNCTIONS_WORKER_RUNTIME: "java"
    OTEL_SERVICE_NAME: 'gpd-ingestion-manager'
    PDV_TOKENIZER_BASE_PATH: "https://api.uat.tokenizer.pdv.pagopa.it/tokenizer/v1"
    PDV_TOKENIZER_INITIAL_INTERVAL: "200"
    PDV_TOKENIZER_MULTIPLIER: "2.0"
    PDV_TOKENIZER_RANDOMIZATION_FACTOR: "0.6"
    PDV_TOKENIZER_MAX_RETRIES: "3"
    KAFKA_BROKER: "pagopa-d-itn-observ-gpd-evh.servicebus.windows.net:9093"
    ENABLE_ECS_CONSOLE: "true"
    CONSOLE_LOG_THRESHOLD: "DEBUG"
    CONSOLE_LOG_PATTERN: "%d{HH:mm:ss.SSS}[%thread]%-5level%logger{36}-%msg%n"
    CONSOLE_LOG_CHARSET: "UTF-8"
    PDV_TOKENIZER_PLACEHOLDER_ON_KO: "true"
    APPLICATIONINSIGHTS_INSTRUMENTATION_KAFKA_ENABLED: "false"
  envFieldRef:
    APP_NAME: "metadata.labels['app.kubernetes.io/instance']"
    APP_VERSION: "metadata.labels['app.kubernetes.io/version']"
  envSecret:
    APPLICATIONINSIGHTS_CONNECTION_STRING: 'ai-d-connection-string'
    PAYMENT_POSITION_INPUT_EVENTHUB_CONN_STRING: "payment-position-topic-input-conn-string"
    PAYMENT_POSITION_OUTPUT_EVENTHUB_CONN_STRING: "payment-position-topic-output-conn-string"
    PAYMENT_OPTION_INPUT_EVENTHUB_CONN_STRING: "payment-option-topic-input-conn-string"
    PAYMENT_OPTION_OUTPUT_EVENTHUB_CONN_STRING: "payment-option-topic-output-conn-string"
    TRANSFER_INPUT_EVENTHUB_CONN_STRING: "transfer-topic-input-conn-string"
    TRANSFER_OUTPUT_EVENTHUB_CONN_STRING: "transfer-topic-output-conn-string"
    PDV_TOKENIZER_SUBSCRIPTION_KEY: "tokenizer-api-key"
  keyvault:
    name: "pagopa-d-gps-kv"
    tenantId: "7788edaf-0346-4068-9d79-c868aed15b3d"
  nodeSelector: {}
  tolerations: []
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node_type
                operator: In
                values:
                  - 'user'
  canaryDelivery:
    create: false
    ingress:
      create: true
      canary:
        type: header
        headerName: X-Canary
        headerValue: canary
        weightPercent: 0
    service:
      create: true
    deployment:
      create: true
      image:
        repository: ghcr.io/pagopa/pagopa-gpd-ingestion-manager
        tag: "0.0.0"
        pullPolicy: Always
      envConfig: {}
      envSecret: {}
